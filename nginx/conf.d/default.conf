# HTTP server (redirects to HTTPS in production)
server {
    listen 80;
    server_name _;

    # Health check endpoint (allow HTTP for load balancers)
    location /health {
        proxy_pass http://api_backend;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # Redirect all other HTTP traffic to HTTPS (uncomment for production)
    # location / {
    #     return 301 https://$server_name$request_uri;
    # }

    # For development/staging, proxy all traffic
    location / {
        proxy_pass http://api_backend;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Rate limiting
        limit_req zone=api burst=20 nodelay;
        
        # Timeouts
        proxy_connect_timeout 30s;
        proxy_send_timeout 30s;
        proxy_read_timeout 30s;
        
        # Buffer settings
        proxy_buffering on;
        proxy_buffer_size 4k;
        proxy_buffers 8 4k;
        proxy_busy_buffers_size 8k;
    }

    # Serve uploaded files directly
    location /uploads/ {
        alias /var/www/uploads/;
        expires 1y;
        add_header Cache-Control "public, immutable";
        add_header X-Content-Type-Options nosniff;
        
        # Security: Only allow image files
        location ~* \.(jpg|jpeg|png|webp)$ {
            try_files $uri =404;
        }
        
        # Deny access to other file types
        location ~ {
            deny all;
        }
    }
}

# HTTPS server (uncomment and configure for production)
# server {
#     listen 443 ssl http2;
#     server_name your-domain.com;
# 
#     # SSL configuration
#     ssl_certificate /etc/nginx/ssl/cert.pem;
#     ssl_certificate_key /etc/nginx/ssl/key.pem;
#     ssl_session_timeout 1d;
#     ssl_session_cache shared:SSL:50m;
#     ssl_session_tickets off;
# 
#     # Modern SSL configuration
#     ssl_protocols TLSv1.2 TLSv1.3;
#     ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384;
#     ssl_prefer_server_ciphers off;
# 
#     # HSTS
#     add_header Strict-Transport-Security "max-age=63072000" always;
# 
#     # API endpoints
#     location / {
#         proxy_pass http://api_backend;
#         proxy_set_header Host $host;
#         proxy_set_header X-Real-IP $remote_addr;
#         proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#         proxy_set_header X-Forwarded-Proto $scheme;
#         
#         # Rate limiting
#         limit_req zone=api burst=20 nodelay;
#         
#         # Timeouts
#         proxy_connect_timeout 30s;
#         proxy_send_timeout 30s;
#         proxy_read_timeout 30s;
#     }
# 
#     # Authentication endpoints (stricter rate limiting)
#     location /auth/login {
#         proxy_pass http://api_backend;
#         proxy_set_header Host $host;
#         proxy_set_header X-Real-IP $remote_addr;
#         proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#         proxy_set_header X-Forwarded-Proto $scheme;
#         
#         # Strict rate limiting for login
#         limit_req zone=login burst=5 nodelay;
#     }
# 
#     # Serve uploaded files directly
#     location /uploads/ {
#         alias /var/www/uploads/;
#         expires 1y;
#         add_header Cache-Control "public, immutable";
#         add_header X-Content-Type-Options nosniff;
#         
#         # Security: Only allow image files
#         location ~* \.(jpg|jpeg|png|webp)$ {
#             try_files $uri =404;
#         }
#         
#         # Deny access to other file types
#         location ~ {
#             deny all;
#         }
#     }
# }